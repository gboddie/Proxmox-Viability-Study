terraform {
  required_providers {
    proxmox = {
      source  = "telmate/proxmox"
      version = "3.0.1-rc6"
    }
  }
}

provider "proxmox" {
    pm_api_url          = "https://192.168.1.132:8006/api2/json"
    pm_api_token_id     = "terraform@pam!terraform"
    pm_api_token_secret = "b77238fa-1ddc-49c2-9178-1afeba1b3d68"
    pm_tls_insecure     = true

}

variable "templates" {
    default = {
	ubuntu 		= { vmid = 1000, name = "UbuntuTemplate" }
	redhat 		= { vmid = 2000, name = "RedhatTemplate-1" }
	windows_server	= { vmid = 3000, name = "WindowsServerTemplate-1" }
    }

}

variable "clone_count" {
    default = 2
}

#Resource for ubunut clones
resource "proxmox_vm_qemu" "ubuntu_clones" {
    for_each = tomap ({
	for i in range (1, var.clone_count + 1) :
	"ubuntu-${i}"  => {
	    vmid	= var.templates.ubuntu.vmid + i
	    name 	= "ubuntu-clone-${i}"
	}	

    })

    vmid 		= each.value.vmid
    name                = each.value.name
    target_node         = "pve1"
    clone               = var.templates.ubuntu.name
    full_clone          = true
    bios		= "seabios"
    agent		= 1
    cores               = 1
    memory              = 2048
    os_type		= "cloud-init"
    onboot		= false #Disable autostart
    scsihw		="virtio-scsi-single"    

    disks {
      ide {
        ide0 {
          cloudinit {
            storage = "local-lvm"
          }
        }
      }

      scsi {
        scsi0 {
          disk {
            size	= 16
            cache	= "writeback"
            storage	= "local-lvm"
            discard	= true
          }
        }
      }
    }

    network {
	id		= 0
        model     	= "virtio"
	bridge	  	= "vmbr0"
    }

    ipconfig0           = "ip=dhcp"
}

#Resource for redhat clones
resource "proxmox_vm_qemu" "redhat_clones"{
    for_each = tomap ({
	for i in range(1, var.clone_count + 1) :
	    "redhat-${i}" => {
		vmid 	= var.templates.redhat.vmid + i
		name 	= "redhat-clone-${i}"
	}

    })

    vmid 		= each.value.vmid
    name		= each.value.name
    target_node		= "pve1"
    clone		= var.templates.redhat.name 
    full_clone		= true
    bios		= "seabios"
    agent		= 1
    cores		= 1
    memory		= 2048
    os_type		= "cloud-init"
    onboot		= false #Disable autostart
    scsihw		="virtio-scsi-single"

    disks {
      ide {
        ide0 {
          cloudinit {
            storage = "local-lvm"
          }
        }
      }

      scsi {
        scsi0 {
          disk {
            size	= 16
            cache	= "writeback"
            storage	= "local-lvm"
            discard	= true
            iothread	= true
          }
        }
      }
    }

    network {
      id		= 0
      model		= "virtio"
      bridge		= "vmbr0"
    }

    ipconfig0		= "ip=dhcp"
}

#Resource for windows server
resource "proxmox_vm_qemu" "windows_server_clone" {
    for_each = tomap({
      for i in range(1, var.clone_count + 1) :
      "windows-${i}" => {
        vmid      = var.templates.windows_server.vmid + i
        name      = "windows-server-clone-${i}"
      }
    })

    vmid	  = each.value.vmid
    name          = each.value.name
    target_node   = "pve1"
    clone         = var.templates.windows_server.name
    full_clone    = true
    bios          = "ovmf"
    agent         = 1
    cores         = 2
    sockets       = 1
    memory        = 4096
    onboot        = false
    machine       = "pc-q35-9.0" 
    scsihw 	  = "virtio-scsi-single"

    disks {
      virtio {
        virtio0 {
          disk {
            size      = 32
            cache     = "writeback"
            storage   = "local-lvm"
            iothread  = true
          }
        }
      }

#      efi {
#        efi0 {
#          storage = "local-lvm"
#        }
#      }
    }

    network {
      id        = 0
      model     = "e1000"
      bridge    = "vmbr0"
      firewall  = true
    }

    ipconfig0 = "ip=dhcp"
}
