locals {
  base_ip = "192.168.1.100"

  ubuntu_ips = {
    for i in range(1, var.clone_count + 1) :
    "ubuntu-${i}" => cidrhost("192.168.1.0/24", 99 + i)  # 192.168.1.100 + i - 1
  }
}

resource "proxmox_vm_qemu" "ubuntu_clones" {
  for_each = tomap({
    for i in range(1, var.clone_count + 1) :
    "ubuntu-${i}" => {
      vmid = var.templates.ubuntu.vmid + i
      name = "ubuntu-clone-${i}"
    }
  })

  vmid        = each.value.vmid
  name        = each.value.name
  target_node = "pve1"
  clone       = var.templates.ubuntu.name
  full_clone  = true
  bios        = "seabios"
  agent       = 1
  cores       = 1
  memory      = 2048
  os_type     = "cloud-init"
  scsihw      = "virtio-scsi-single"
  sshkeys     = file(var.ssh_public_key)

  disks {
    ide {
      ide0 {
        cloudinit {
          storage = "local-lvm"
        }
      }
    }

    scsi {
      scsi0 {
        disk {
          size    = 16
          cache   = "writeback"
          storage = "local-lvm"
          discard = true
        }
      }
    }
  }

  network {
    id      = 0
    model   = "virtio"
    bridge  = "vmbr0"
  }

  ipconfig0 = "ip=${local.ubuntu_ips[each.key]}/24,gw=192.168.1.1"
}

resource "null_resource" "wait_for_ssh" {
  for_each = local.ubuntu_ips

  provisioner "local-exec" {
    command = <<-EOT
      echo "Waiting for SSH on ${each.value}...";
      until nc -z ${each.value} 22; do
        echo "Still waiting on ${each.value}...";
        sleep 10;
      done
      echo "SSH is ready on ${each.value}"
    EOT
  }
}

resource "null_resource" "run_setupsql" {
  for_each = local.ubuntu_ips
  depends_on = [
    proxmox_vm_qemu.ubuntu_clones,
    null_resource.wait_for_ssh
  ]

  connection {
    type        = "ssh"
    host        = each.value
    user        = "ubuntu"
    private_key = file(var.ssh_private_key)
    timeout     = "15m"
  }

  provisioner "file" {
    source      = "./sql/setup.sql"
    destination = "/tmp/setup.sql"
  }

  provisioner "remote-exec" {
    inline = [
      "echo 'Waiting for MySQL to be ready...'",
      "until sudo mysqladmin ping --silent; do sleep 2; done",
      "echo 'Running setup.sql...'",
      "sudo mysql -u root < /tmp/setup.sql",
      "echo 'setup.sql execution completed.'"
    ]
  }
}

resource "null_resource" "rollback_ubuntu_vms" {
  count = var.restore ? var.clone_count : 0

  provisioner "remote-exec" {
    inline = [
      "qm rollback ${var.templates.ubuntu.vmid + count.index + 1} ${var.snapshot_name}"
    ]
    connection {
      type        = "ssh"
      host        = var.proxmox_host
      user        = var.ssh_user
      private_key = file(var.ssh_private_key)
    }
  }
}
